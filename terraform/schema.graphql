type Query {
  magicRequest(prompt: String!, size: String!): MagicRequestResult
  magicRequestV2(prompt: String!, size: String!, wick: String!, jar: String!, wax: String!): MagicPreviewV2
  magicPreviewJob(jobId: ID!): MagicPreviewJob!
}

type Mutation {
  createCheckout(items: [CartItemInput!]!): CheckoutResult
  addToCart(prompt: String!, size: String!, wick: String!, jar: String!, cartId: ID!): Cart
  createCartWithCustomItem(prompt: String!, size: String!, wick: String!, jar: String!): Cart
  startMagicPreview(prompt: String!, size: String!, wick: String!, jar: String!, wax: String!): MagicPreviewJob!
}

type Cart {
  id: ID!
  lines: [CartLine!]!
  totalQuantity: Int!
  cost: CartCost!
}

type CartLine {
  id: ID!
  quantity: Int!
  merchandise: Merchandise!
  attributes: [Attribute!]!
}

type Merchandise {
  id: ID!
  title: String!
  price: Money!
}

type Money {
  amount: String!
  currencyCode: String!
}

type Attribute {
  key: String!
  value: String!
}

type CartCost {
  totalAmount: Money!
}

input CartItemInput {
  type: String!
  variantId: String
  quantity: Int
  configuration: CustomCandleInput
}

input CustomCandleInput {
  size: String!
  jarType: String!
  wickType: String!
  scentRecipe: ScentRecipeInput!
}

input ScentRecipeInput {
  materials: [String!]!
  materialCount: Int!
}

type MagicRequestResult {
  candleName: String!
  description: String!
}

type CheckoutResult {
  invoice_url: String
  error: Error
}

type MagicPreviewV2 {
  json: String!
}

enum PreviewJobStatus {
  QUEUED
  PROCESSING
  READY
  ERROR
}

type MagicPreviewJob {
  jobId: ID!
  status: PreviewJobStatus!
  html: String
  error: String
}

type Error {
  message: String!
  type: String!
}
